#!/usr/bin/env bash

# generate a random password

if [ -z "$1" ]; then
  PWD_LEN=15
else
  PWD_LEN=$1
fi

# generate and print password
PASSWORD=$(LC_CTYPE=C < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${PWD_LEN})
printf '%s\n' "${PASSWORD}"

# find SHA1 hash of the password
function sha1() {
  if which shasum &>/dev/null; then
    printf '%s' "$1" | shasum | cut -d " " -f 1
  else
    printf 'no SHA command available\n' >&2
    exit 1
  fi
}
HASH=$(sha1 "${PASSWORD}")

# ask Have I Been Pwned if it appears in a password breach
function download() {
  if which curl &>/dev/null; then
    curl --silent --show-error --user-agent 'generate-passwd <https://github.com/Smattr/mattutils/blob/master/generate-passwd>' "$1"
  else
    printf 'no download command available\n' >&2
    exit 1
  fi
}
if download "https://api.pwnedpasswords.com/range/${HASH:0:5}" | grep --ignore-case "${HASH:5:35}" &>/dev/null; then
  printf 'WARNING: password appears in previous Have I Been Pwned breach\n' >&2
  exit 1
fi
