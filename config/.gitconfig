[user]
	name = Matthew Fernandez
[color]
    ui = True
[pager]
    status = True
    diff = "less -FRSX +Gg"
    branch = True

[github]
	user = Smattr

[alias]
    co = clone
    st = status
    glog = log --graph --stat
    incoming = "!git fetch origin master && git log ..origin/master"
    outgoing = "!git getch origin master && git log origin/master.."
    in = incoming
    out = outgoing
    root = rev-parse --show-toplevel
    # Fix Git's shitty inability to bisect when not at the top level
    bi = "!f() { git rev-parse --show-toplevel >/dev/null && cd $(git rev-parse --show-toplevel) && git bisect \"$@\"; }; f"
    re = "!f() { GIT_EDITOR=rerebase git rebase \"$@\"; }; f"
    dsf = "!f() { { which diff-so-fancy >/dev/null 2>/dev/null || { echo \"diff-so-fancy not found\" >&2; exit 1; }; } && [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
    ssf = "!f() { { which diff-so-fancy >/dev/null 2>/dev/null || { echo \"diff-so-fancy not found\" >&2; exit 1; }; } && [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git show --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
    dif = "!f() { { which dif >/dev/null 2>/dev/null || { echo \"dif not found\" >&2; exit 1; }; } && [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff \"$@\" | dif; }; f"
    sif = "!f() { { which dif >/dev/null 2>/dev/null || { echo \"dif not found\" >&2; exit 1; }; } && [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git show --color \"$@\" | dif; }; f"

[merge]
    conflictstyle = diff3

[log]
    decorate = True

[rebase]
    autoStash = True
    autoSquash = True
    stat = True

[include]
    path = .gitconfig_mattbin
