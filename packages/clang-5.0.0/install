#!/usr/bin/env bash

# Exit on error
set -e

function download() {
  if which wget &>/dev/null; then
    wget "$1"
  elif which curl &>/dev/null; then
    curl --remote-name "$1"
  else
    printf "no suitable download tool found\n" >&2
    exit 1
  fi
}

printf "Downloading LLVM...\n"
download "http://releases.llvm.org/5.0.0/llvm-5.0.0.src.tar.xz"

if which gpg &>/dev/null; then
  download "http://releases.llvm.org/5.0.0/llvm-5.0.0.src.tar.xz.sig"

  printf "Validating LLVM...\n"
  gpg --keyserver pool.sks-keyservers.net --recv-keys 345AD05D
  gpg --verify llvm-5.0.0.src.tar.xz.sig
else
  printf "Warning: GPG not found; skipping validation\n" >&2
fi

printf "Extracting LLVM...\n"
tar xvf llvm-5.0.0.src.tar.xz
mv llvm-5.0.0.src llvm

printf "Downloading Clang...\n"
download "http://releases.llvm.org/5.0.0/cfe-5.0.0.src.tar.xz"

if which gpg &>/dev/null; then
  download "http://releases.llvm.org/5.0.0/cfe-5.0.0.src.tar.xz.sig"

  printf "Validating Clang...\n"
  gpg --verify cfe-5.0.0.src.tar.xz.sig
else
  printf "Warning: GPG not found; skipping validation\n" >&2
fi

printf "Extracting Clang...\n"
tar xvf cfe-5.0.0.src.tar.xz
mv cfe-5.0.0.src llvm/tools/clang

printf "Downloading clang-tools-extra...\n"
download http://releases.llvm.org/5.0.0/clang-tools-extra-5.0.0.src.tar.xz

if which gpg &>/dev/null; then
  download "http://releases.llvm.org/5.0.0/clang-tools-extra-5.0.0.src.tar.xz.sig"

  printf "Validating clang-tools-extra...\n"
  gpg --verify clang-tools-extra-5.0.0.src.tar.xz.sig
else
  printf "Warning: GPG not found; skipping validation\n" >&2
fi

printf "Extracting clang-tools-extra...\n"
tar xvf clang-tools-extra-5.0.0.src.tar.xz
mv clang-tools-extra-5.0.0.src llvm/tools/clang/tools/extra

printf "Downloading compiler-rt...\n"
download http://releases.llvm.org/5.0.0/compiler-rt-5.0.0.src.tar.xz

if which gpg &>/dev/null; then
  download "http://releases.llvm.org/5.0.0/compiler-rt-5.0.0.src.tar.xz.sig"

  printf "Validating compiler-rt...\n"
  gpg --verify compiler-rt-5.0.0.src.tar.xz.sig
else
  printf "Warning: GPG not found; skipping validation\n" >&2
fi

printf "Extracting compiler-rt...\n"
tar xvf compiler-rt-5.0.0.src.tar.xz
mv compiler-rt-5.0.0.src llvm/projects/compiler-rt

printf "Compiling...\n"
mkdir build
cd build
# Use GCC 7.2.0 instead of the local GCC so we know we'll have C++17 etc support.
cmake -G Ninja -DCMAKE_C_COMPILER=${KAGE_ROOT}/gcc-7.2.0/wrapper/gcc \
  -DCMAKE_CXX_COMPILER=${KAGE_ROOT}/gcc-7.2.0/wrapper/g++ \
  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${KAGE_ROOT}/clang-5.0.0 \
  -DGCC_INSTALL_PREFIX=${KAGE_ROOT}/gcc-7.2.0 \
  -DCMAKE_CXX_LINK_FLAGS="-L${KAGE_ROOT}/gcc-7.2.0/lib64 -Wl,-rpath,${KAGE_ROOT}/gcc-7.2.0/lib64" \
  ../llvm
ninja
ninja install
