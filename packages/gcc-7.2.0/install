#!/usr/bin/env bash

# Exit on error
set -e

# Figure out how many CPUs we have
JOBS=1
if which getconf &>/dev/null; then
  if getconf _NPROCESSORS_ONLN &>/dev/null; then
    JOBS=$(getconf _NPROCESSORS_ONLN)
  elif getconf NPROCESSORS_ONLN &>/dev/null; then
    JOBS=$(getconf NPROCESSORS_ONLN)
  fi
fi

function download() {
  if which wget &>/dev/null; then
    wget "$1"
  elif which curl &>/dev/null; then
    curl --remote-name "$1"
  else
    printf "no suitable download tool found\n" >&2
    exit 1
  fi
}

function sha512() {
  if which sha512sum &>/dev/null; then
    sha512sum "$@"
  elif which shasum &>/dev/null; then
    shasum --algorithm 512 "$@"
  else
    printf "no suitable sha512 tool found\n" >&2
    exit 1
  fi
}

printf "Downloading...\n"
download "http://www.netgull.com/gcc/releases/gcc-7.2.0/gcc-7.2.0.tar.xz"
download "http://www.netgull.com/gcc/releases/gcc-7.2.0/sha512.sum"

printf "Validating...\n"
head -2 sha512.sum | tail -1 >justxz.sum
sha512 --check justxz.sum

printf "Extracting...\n"
tar xvf gcc-7.2.0.tar.xz

printf "Downloading dependencies...\n"
cd gcc-7.2.0
./contrib/download_prerequisites

printf "Configuring...\n"
./configure --prefix=${KAGE_ROOT}/gcc-7.2.0

printf "Compiling...\n"
make --jobs=${JOBS}

printf "Installing...\n"
make install
