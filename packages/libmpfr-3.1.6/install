#!/usr/bin/env bash

# Exit on error
set -e

# Figure out how many CPUs we have
JOBS=1
if which getconf &>/dev/null; then
  if getconf _NPROCESSORS_ONLN &>/dev/null; then
    JOBS=$(getconf _NPROCESSORS_ONLN)
  elif getconf NPROCESSORS_ONLN &>/dev/null; then
    JOBS=$(getconf NPROCESSORS_ONLN)
  fi
fi

function download() {
  if which wget &>/dev/null; then
    wget "$1"
  elif which curl &>/dev/null; then
    curl --remote-name "$1"
  else
    printf "no suitable download tool found\n" >&2
    exit 1
  fi
}

printf "Downloading...\n"
download "http://www.mpfr.org/mpfr-current/mpfr-3.1.6.tar.xz"

if which gpg &>/dev/null; then
  download http://www.mpfr.org/mpfr-current/mpfr-3.1.6.tar.xz.asc

  printf "Validating...\n"
  gpg --keyserver pool.sks-keyservers.net --recv-keys 980C197698C3739D
  gpg --verify mpfr-3.1.6.tar.xz.asc
else
  printf "Warning: GPG not found; skipping validation\n" >&2
fi

printf "Extracting...\n"
tar xvf mpfr-3.1.6.tar.xz

printf "Configuring...\n"
cd mpfr-3.1.6
./configure --prefix=${KAGE_ROOT}/libmpfr-3.1.6 --with-gmp=${KAGE_ROOT}/libgmp-6.1.2

printf "Compiling...\n"
make --jobs=${JOBS}

printf "Installing...\n"
make install
